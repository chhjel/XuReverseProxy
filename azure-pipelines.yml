trigger:
- main
- beta

resources:
- repo: self

variables:
- name: cleanSourceBranch
  value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
- name: buildReasonRevisionNumber
  value: $[counter(variables['CleanSourceBranch'], 0)]
- name: versionMajorMinor
  value: '1.1'
- name: versionTag
  value: '$(versionMajorMinor).$(buildReasonRevisionNumber)'
- name: coreTag
  value: 'latest'
- name: isMain
  value: $[eq(variables['cleanSourceBranch'], 'main')]
- name: isBeta
  value: $[eq(variables['cleanSourceBranch'], 'beta')]
- name: shouldPublish
  value: $[eq(variables['isMain'], 'true')]
  # value: $[or(eq(variables['isMain'], 'true'), eq(variables['isBeta'], 'true'))]

stages:
- stage: Build
  displayName: Build Docker image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:

    # Beta branch overrides
    - script: echo '##vso[task.setvariable variable=buildReasonRevisionNumber]$[counter(variables['main'], 0)]
      displayName: "Use main counter for beta"
      condition: and(succeeded(), eq(variables['isBeta'], 'true'))

    - script: echo '##vso[task.setvariable variable=versionTag]$(versionMajorMinor).$(buildReasonRevisionNumber)-beta
      displayName: "Set beta versionTag"
      condition: and(succeeded(), eq(variables['isBeta'], 'true'))

    - script: echo '##vso[task.setvariable variable=coreTag]beta
      displayName: "Set core tag to beta"
      condition: and(succeeded(), eq(variables['isBeta'], 'true'))

    - script: |
        echo buildReasonRevisionNumber: $(buildReasonRevisionNumber)
        echo versionTag: $(versionTag)
        echo coreTag: $(coreTag)
      displayName: Debug output some variables

    - task: Docker@2
      displayName: Build docker image
      inputs:
        command: 'build'
        containerRegistry: 'DockerHub - christianwut'
        repository: 'christianwut/xureverseproxy'
        Dockerfile: '$(Build.SourcesDirectory)/XuReverseProxy/Dockerfile'
        buildContext: '**/../'
        tags: |
          $(versionTag)
          $(coreTag)
        arguments: --label branch=$(cleanSourceBranch) --build-arg BUILD_VERSION="$(versionTag)"

    - task: Docker@2
      displayName: Push image to docker hub.docker.com
      condition: and(succeeded(), eq(variables['shouldPublish'], 'true'))
      inputs:
        command: 'push'
        containerRegistry: 'DockerHub - christianwut'
        repository: 'christianwut/xureverseproxy'
        tags: |
          $(versionTag)
          $(coreTag)
